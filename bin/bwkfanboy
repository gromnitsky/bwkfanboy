#!/usr/bin/env ruby

require_relative '../lib/bwkfanboy/home'
require_relative '../lib/bwkfanboy/utils'
include Bwkfanboy

### main

mode = nil
$home = Home.new {|loader, o|
  loader.conf[:banner] = "#{File.basename $0} [options] plugin [opt1 opt2 ...]"

  o.on('-l', 'List all plugins.') {
    mode = :list
  }
  o.on('-i', 'Show some info about the plugin.') {
    mode = :info
  }
  o.on('-s FILE', 'Write to the FILE a skeleton for a plugin.') {|i|
    mode = :template
    loader.conf[:skeleton] = i
    loader.conf[:template] = (CliUtils::DIR_LIB_SRC + 'plugin_skeleton.erb').to_s
  }

}

if !mode
  CliUtils.errx EX_USAGE, $home.conf[:banner] unless BH.all_set?(ARGV[0])
end

case mode
when :list
  PluginInfo.list $home.conf[:plugins_path]

when :info
  begin
    PluginInfo.about $home.conf[:plugins_path], ARGV[0], ARGV[1..-1]
  rescue  PluginException
    CliUtils.errx EX_DATAERR, $!.to_s
  end

when :template
  exit EX_CANTCREAT unless Utils.skeletonCreate $home.conf[:template], "#{$home.conf[:skeleton]}.rb"

else
  begin
    Utils.atom $home.conf[:plugins_path], ARGV[0], ARGV[1..-1]
  rescue FetchException, PluginException, GeneratorException
    CliUtils.errx EX_DATAERR, $!.to_s
  end

end
