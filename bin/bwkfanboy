#!/usr/bin/env ruby

require_relative '../lib/bwkfanboy/plugin'
require_relative '../lib/bwkfanboy/generator'
require_relative '../lib/bwkfanboy/fetch'
include Bwkfanboy

### main

mode = nil
$home = Home.new {|loader, o|
  loader.conf[:banner] = "#{File.basename $0} [options] plugin"
  
  o.on('-l', 'List all plugins.') { 
    mode = :list
  }
  o.on('-i', 'Show some info about the plugin.') {
    mode = :info
  }
  o.on('-t FILE', 'Write to the FILE a skeleton for a plugin.') {|i|
    
  }
  
}

if !mode
  CliUtils.errx EX_USAGE, $home.conf[:banner] unless BH.all_set?(ARGV[0])
end

case mode
when :list
  PluginInfo.list $home.conf[:plugins_path]
  
when :info
  begin
    PluginInfo.about $home.conf[:plugins_path], ARGV[0], ARGV[1..-1]
  rescue  PluginException
    CliUtils.errx EX_DATAERR, $!.to_s
  end

else
  begin
    p = Plugin.new $home.conf[:plugins_path], ARGV[0], ARGV[1..-1]
    streams = Fetch.openStreams p.uri
    p.run_parser(streams)
    
    raw = StringIO.new p.pack
    puts Generator.atom(Generator.unpack raw)
#    puts Generator.atom p.export
    
    Fetch.closeStreams streams
  rescue FetchException, PluginException, GeneratorException
    CliUtils.errx EX_DATAERR, $!.to_s
  end
end
